@startuml Class
top to bottom direction

class Prenda {
    +Tipo
    +Material
    +ColorPrimario
    +ColorSecundario
    +Patron
    +Formalidad
    +TempMaxima
    +TempMinima

    +sirveEnTemperatura(temperatura)
}

enum Categoria {
    INFERIOR
    SUPERIOR
    CALZADO
    ACCESORIO
}

enum Tipo{
    CAMISA
    PANTALON
    etc
}

enum Patron {
    LUNARES
    RAYADA
    ESTAMPADA
    CUADROS
    LISA
}

enum Material {
    ALGODON
    LYCRA
    etc
}

class Usuario {
    +edad
    +Guardarropas
    +motorSugerencia

    +getPrendas()
}

enum Formalidad {
    FORMAL
    INFORMAL
    NEUTRA
}

abstract class MotorSugerencia {

    +generarSugerencia(usuario, prendas)
    #filtroPropio(usuario) {abstract}
}

class MotorSugerenciaTodas {
    #filtroPropio(usuario)
}

class MotorSugerenciaEdad {
    #filtroPropio(usuario)
}

class MotorSugerenciaClima {
    -servicioMeteorologico

    #filtroPropio(usuario)
}
abstract class ServicioMeteorologico {
   -periodoValidez
   -consultas
   +getEstadoClima(ciudad)
   #getClima(ciudad) {abstract}


}

class EstadoClima {
    +temperatura
    +humedad
}

class RespuestaClima {
    +estadoClima
    +fechaExpiracion

    +isExpired()
}

class ServicioMeteorologicoAccuWeather{
    -accuWeather
    #getClima(ciudad)
}

class AccuWeatherApi {
    +getWeather(ciudad)
}



enum Humedad {
    ALTA
    BAJA
}



Prenda *-- Patron
Prenda *-- Tipo
Prenda *-- Material
Prenda *-- Formalidad
Tipo *-- Categoria
Usuario *-- Prenda
Usuario ..> MotorSugerencia
MotorSugerencia <-- MotorSugerenciaEdad
MotorSugerencia <-- MotorSugerenciaTodas
MotorSugerencia <-- MotorSugerenciaClima
MotorSugerenciaClima ..> ServicioMeteorologico
MotorSugerencia ..> Prenda
ServicioMeteorologico <-- ServicioMeteorologicoAccuWeather
ServicioMeteorologico ..> RespuestaClima
RespuestaClima *--EstadoClima
EstadoClima *-- Humedad
ServicioMeteorologicoAccuWeather ..> AccuWeatherApi
@enduml